import { expect, it } from 'vitest'
import { isStringFloat, isStringFloatNegative, isStringFloatPositive, isStringInteger, isStringIntegerNegative, isStringIntegerPositive, isStringNumber } from './isStringNumber'

it('should return true if value is a number as a string', () => {
  expect(isStringNumber('123')).toBe(true)
  expect(isStringNumber('-123')).toBe(true)
  expect(isStringNumber('0')).toBe(true)
  expect(isStringNumber('0.1')).toBe(true)
  expect(isStringNumber('-0.1')).toBe(true)
  expect(isStringNumber('1e5')).toBe(true)
  expect(isStringNumber('-1e5')).toBe(true)
  expect(isStringNumber('1e-5')).toBe(true)
  expect(isStringNumber('-1e-5')).toBe(true)
  expect(isStringNumber('1.1e5')).toBe(true)
  expect(isStringNumber('-1.1e5')).toBe(true)
  expect(isStringNumber('1.1e-5')).toBe(true)
  expect(isStringNumber('-1.1e-5')).toBe(true)
  expect(isStringNumber('foo')).toBe(false)
  expect(isStringNumber('1foo')).toBe(false)
  expect(isStringNumber('foo1')).toBe(false)
})

it('should return true if value is an integer as a string', () => {
  expect(isStringInteger('123')).toBe(true)
  expect(isStringInteger('-123')).toBe(true)
  expect(isStringInteger('0')).toBe(true)
  expect(isStringInteger('0.1')).toBe(false)
  expect(isStringInteger('-0.1')).toBe(false)
  expect(isStringInteger('1e5')).toBe(false)
  expect(isStringInteger('-1e5')).toBe(false)
  expect(isStringInteger('foo')).toBe(false)
  expect(isStringInteger('1foo')).toBe(false)
  expect(isStringInteger('foo1')).toBe(false)
})

it('should return true if value is a positive integer as a string', () => {
  expect(isStringIntegerPositive('123')).toBe(true)
  expect(isStringIntegerPositive('-123')).toBe(false)
  expect(isStringIntegerPositive('0')).toBe(true)
  expect(isStringIntegerPositive('0.1')).toBe(false)
  expect(isStringIntegerPositive('-0.1')).toBe(false)
  expect(isStringIntegerPositive('1e5')).toBe(false)
  expect(isStringIntegerPositive('-1e5')).toBe(false)
  expect(isStringIntegerPositive('foo')).toBe(false)
  expect(isStringIntegerPositive('1foo')).toBe(false)
  expect(isStringIntegerPositive('foo1')).toBe(false)
})

it('should return true if value is a negative integer as a string', () => {
  expect(isStringIntegerNegative('123')).toBe(false)
  expect(isStringIntegerNegative('-123')).toBe(true)
  expect(isStringIntegerNegative('0')).toBe(false)
  expect(isStringIntegerNegative('0.1')).toBe(false)
  expect(isStringIntegerNegative('-0.1')).toBe(false)
  expect(isStringIntegerNegative('1e5')).toBe(false)
  expect(isStringIntegerNegative('-1e5')).toBe(false)
  expect(isStringIntegerNegative('foo')).toBe(false)
  expect(isStringIntegerNegative('1foo')).toBe(false)
  expect(isStringIntegerNegative('foo1')).toBe(false)
})

it('should return true if value is an float as a string', () => {
  expect(isStringFloat('123')).toBe(true)
  expect(isStringFloat('-123')).toBe(true)
  expect(isStringFloat('0')).toBe(true)
  expect(isStringFloat('0.1')).toBe(true)
  expect(isStringFloat('-0.1')).toBe(true)
  expect(isStringFloat('1e5')).toBe(false)
  expect(isStringFloat('-1e5')).toBe(false)
  expect(isStringFloat('foo')).toBe(false)
  expect(isStringFloat('1foo')).toBe(false)
  expect(isStringFloat('foo1')).toBe(false)
})

it('should return true if value is a positive float as a string', () => {
  expect(isStringFloatPositive('123')).toBe(true)
  expect(isStringFloatPositive('-123')).toBe(false)
  expect(isStringFloatPositive('0')).toBe(true)
  expect(isStringFloatPositive('0.1')).toBe(true)
  expect(isStringFloatPositive('-0.1')).toBe(false)
  expect(isStringFloatPositive('1e5')).toBe(false)
  expect(isStringFloatPositive('-1e5')).toBe(false)
  expect(isStringFloatPositive('foo')).toBe(false)
  expect(isStringFloatPositive('1foo')).toBe(false)
  expect(isStringFloatPositive('foo1')).toBe(false)
})

it('should return true if value is a negative float as a string', () => {
  expect(isStringFloatNegative('123')).toBe(false)
  expect(isStringFloatNegative('-123')).toBe(true)
  expect(isStringFloatNegative('0')).toBe(false)
  expect(isStringFloatNegative('0.1')).toBe(false)
  expect(isStringFloatNegative('-0.1')).toBe(true)
  expect(isStringFloatNegative('1e5')).toBe(false)
  expect(isStringFloatNegative('-1e5')).toBe(false)
  expect(isStringFloatNegative('foo')).toBe(false)
  expect(isStringFloatNegative('1foo')).toBe(false)
  expect(isStringFloatNegative('foo1')).toBe(false)
})
